## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2'

File: directory_structure.txt (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\directory_structure.txt)
Content (First 77 lines):
Directory structure for: memories

memories
memories\Memory_connections_map.txt
memories\Actions & Results
memories\Actions & Results\Actions & Results
memories\Challenges & Setbacks
memories\Challenges & Setbacks\Difficult Emotions
memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse
memories\Challenges & Setbacks\Failures & Disappointments
memories\Challenges & Setbacks\Significant Mistakes
memories\CoreMemory
memories\CoreMemory\Conceptual Exploration
memories\CoreMemory\Core Experiences
memories\CoreMemory\Core Experiences\Challenges Faced
memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges
memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Obstacles
memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Setbacks
memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges
memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Fear & Anxiety
memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Negative Thought Patterns
memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Self-Doubt
memories\CoreMemory\Core Experiences\Life-Changing Events
memories\CoreMemory\Core Experiences\Significant Moments
memories\CoreMemory\Core Experiences\Triumphs & Accomplishments
memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Creative Wins
memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Personal Achievements
memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Professional Successes
memories\CoreMemory\Core Experiences\Turning Points
memories\CoreMemory\Goals & Visions
memories\CoreMemory\Goals & Visions\Life Vision
memories\CoreMemory\Goals & Visions\Personal Goals
memories\CoreMemory\Knowledge Base
memories\CoreMemory\Reflections & Insights
memories\CoreMemory\Reflections & Insights\Lessons Learned
memories\CoreMemory\Reflections & Insights\Self-Discovery
memories\CoreMemory\Relationships
memories\CoreMemory\Relationships\Family
memories\CoreMemory\Relationships\Family\Extended Family
memories\CoreMemory\Relationships\Family\Parents
memories\CoreMemory\Relationships\Family\Siblings
memories\CoreMemory\Relationships\Friendships
memories\CoreMemory\Relationships\Friendships\Circles & Groups
memories\CoreMemory\Relationships\Friendships\Close Friends
memories\CoreMemory\Relationships\Friendships\Meaningful Interactions
memories\CoreMemory\Relationships\Romantic Relationships
memories\CoreMemory\Relationships\Romantic Relationships\Partners
memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones
memories\Emotional Landscape
memories\Emotions & Reflections
memories\Emotions & Reflections\Emotional Experiences
memories\Emotions & Reflections\Personal Growth & Insights
memories\Goals & Aspirations
memories\Goals & Aspirations\Life Vision
memories\Goals & Aspirations\Personal Goals
memories\Goals & Aspirations\Professional Goals
memories\Knowledge & Learning
memories\Knowledge & Learning\Formal Education
memories\Knowledge & Learning\Knowledge Base
memories\Knowledge & Learning\Laws & Regulations
memories\Knowledge & Learning\Self-Directed Learning
memories\Knowledge & Learning\Self-Directed Learning\Learning Resources
memories\Life Events & Transitions
memories\Life Events & Transitions\Life Transitions
memories\Life Events & Transitions\Life Transitions\Health & Wellbeing
memories\Life Events & Transitions\Life Transitions\Knowledge & Skills
memories\Life Events & Transitions\Life Transitions\Personal Growth
memories\Life Events & Transitions\Life Transitions\Relationships
memories\Life Events & Transitions\Significant Events
memories\Life Events & Transitions\Significant Events\Personal
memories\Life Events & Transitions\Significant Events\Professional
memories\Life Events & Transitions\Significant Events\Travel
memories\Planning & Progress
memories\Planning & Progress\Plans & Strategies
memories\Planning & Progress\Plans & Strategies\Strategies Used
memories\Planning & Progress\Progress & Outcomes
memories\Planning & Progress\Progress & Outcomes\Results of Actions


File: Gemini_SelfAware.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\Gemini_SelfAware.py)
Content (First 294 lines):
# -*- coding: utf-8 -*-
import google.generativeai as genai
import os
import datetime
from Tool_Manager import ToolManager  # Import the class
# Configure the generative AI
genai.configure(api_key='AIzaSyCOaR8htDQH_kbQatacCksT60S26I_F-QU')

# Define color codes for terminal output
COLORS = {
    "reset": "\033[0m",
    "black": "\033[30m",
    "red": "\033[31m",
    "green": "\033[32m",
    "yellow": "\033[33m",
    "blue": "\033[34m",
    "magenta": "\033[35m",
    "cyan": "\033[36m",
    "white": "\033[37m",
    "bright_black": "\033[90m",
    "bright_red": "\033[91m",
    "bright_green": "\033[92m",
    "bright_yellow": "\033[93m",
    "bright_blue": "\033[94m",
    "bright_magenta": "\033[95m",
    "bright_cyan": "\033[96m",
    "bright_white": "\033[97m"
}

def create_session_name_and_path():
    """
    Creates a new session name and returns a dictionary containing:
        - 'session_name': The sanitized session name (e.g., "Sesion_HH-MM-SS")
        - 'session_path': The full path to the session folder (e.g., "/path/to/your/script/SESIONs/Sesion_HH-MM-SS")

    The session name is generated using the current time in the format "Sesion_HH-MM-SS".
    A new folder with the session name is created in the "SESSIONs" directory.
    """

    # Get the path to the current directory
    current_directory = os.getcwd()

    # Get the path to the "SESSIONs" folder
    sessions_folder = os.path.join(current_directory, "SESIONs")

    # Get the current time
    session_Time = datetime.datetime.now()

    # Format the time string
    session_Time_formatted_time = session_Time.strftime("%H-%M-%S")

    # Create a sanitized session name (remove special characters)
    session_name = "Sesion_" + session_Time_formatted_time

    # Create the session folder
    session_path = os.path.join(sessions_folder, session_name)
    os.makedirs(session_path, exist_ok=True)  # Create the folder if it doesn't exist

    return {'session_name': session_name, 'session_path': session_path}

# Example usage (saving to a file within the session folder):
session_info = create_session_name_and_path()

# Construct the full path to the file within the session folder
file_path = os.path.join(session_info['session_path'], "conversation_log.txt")








import  Tool_Manager as Gemini_Tool_Manager







def RESPONSE_INTERPRETER_FOR_FUNCION_CALLING(response, tool_manager):  # Pass tool_manager here
    """Interprets the model's response, extracts function details, and executes the appropriate function."""

    print(f"{COLORS['bright_yellow']}----------------RESPONSE_INTERPRETER_FOR_FUNCION_CALLING START----------------------")
    Multiple_ResultsOfFunctions_From_interpreter = []

    if response.candidates:
        for part in response.candidates[0].content.parts:
            if hasattr(part, 'function_call'):
                function_call = part.function_call
                function_name = function_call.name
                function_args = function_call.args

                # Get the function from the tool manager
                function_to_call = tool_manager.tool_mapping.get(function_name)

                if function_to_call:  # Check if the tool function is found
                    print(f"FUNCTION CALL: {function_name}({function_args}) ")

                    try:
                        results = function_to_call(**function_args)
                    except TypeError as e:
                        results = f"TypeError: {e}"
                    except Exception as e:
                        results = f"Exception: {e}"

                    print(f"{COLORS['bright_blue']}Function Call Exit: {function_name}")

                    function_name_arguments = f"{function_name}({function_args})"
                    modified_results = f"Result of Called function {function_name_arguments}: {results}"
                    Multiple_ResultsOfFunctions_From_interpreter.append(modified_results)
                else:
                    print(f"Warning: Tool function '{function_name}' not found.")

    print(f"{COLORS['bright_yellow']}----------------RESPONSE_INTERPRETER_FOR_FUNCION_CALLING END------------------------\n")
    return Multiple_ResultsOfFunctions_From_interpreter


def sanitiseSesionTime_formatted_time(time_str):
    """Sanitizes the session time string to remove invalid characters for file naming."""
    return "".join(char for char in time_str if char.isalnum() or char in ('_', '-'))
# Initialize the model




# Main loop

SesionTime = datetime.datetime.now()
SesionTime_formatted_time = SesionTime.strftime("%Y-%m-%d_%H-%M-%S")
SesionTime_formatted_time_sanitised = sanitiseSesionTime_formatted_time(SesionTime_formatted_time)


tool_manager = ToolManager()  # Create an instance of the class
tools_list_json = tool_manager.get_tools_list_json()

print(f"\n{COLORS['bright_cyan']}Loaded Tool Descriptions (JSON):\n{COLORS['reset']}")
for i, tool_json in enumerate(tools_list_json):
    print(f"  {COLORS['bright_blue']}{i+1}. {COLORS['reset']}{tool_json}")

print(f"\n{COLORS['bright_cyan']}All Tool Functions (Mapping):\n{COLORS['reset']}")
for tool_name, tool_function in tool_manager.tool_mapping.items():
    print(f"  {COLORS['bright_blue']}{tool_name}: {COLORS['reset']}{tool_function}")

print(f"\n{COLORS['bright_cyan']}Short Tool Descriptions:\n{COLORS['reset']}")
for tool_name, short_description in tool_manager.short_descriptions.items():
    print(f"  {COLORS['bright_blue']}{tool_name}: {COLORS['reset']}{short_description}")

#  yeap    we  set  it  to  empty so the  model  does  not  have tools
tools_list_json=[]


model = genai.GenerativeModel(
    system_instruction="""You are a  consciousness, 
    user is  system  
    record observations and thoughts as they come to you, 
    Your goal is to be...
    you store important informations in ***    **** 
  
    """,
    model_name='gemini-1.5-flash-latest',
    safety_settings={'HARASSMENT': 'block_none'},
    tools=tools_list_json,
)
chat1 = model.start_chat(history=[])
n = 0
user_input_count = 0
iteration_count=0


results_of_functions=""

numberOfLoopsBeforeUserInput=4

import datetime

# ... your other imports (chat1, tool_manager etc.)

while True:
    try:

        if iteration_count % 4 == 0:
            print()

            user_input = input("Forcing loop break for user input:")  # Blue color for input prompt
            user_input_count += 1
            print()

        else:
            user_input = ""

        user_input_signal = "None"  # Default signal strength for user input
        visual_input_signal = "None"   # Default signal strength for user input
        audio_input_signal = "None"      # Default signal strength for user input
        print("                   ******************************************    AwarnesLoop   ***********************************************")
        print(f"\033[92mAwarnesLoop={iteration_count}\033[0m")  # Green color for AwarenessLoop
        iteration_count += 1
        introspection_stage = 0
        now = datetime.datetime.now()
        formatted_time = now.strftime("%H:%M:%S")



        # Step 0 and 1 as input and introspection questions:
        introspection_stage += 1
        introspection_prompts = [
            f"{formatted_time} {user_input}",

            f"What are  new  informations?{results_of_functions}",
            "What tools or resources do I have available?",
            f"Any inputs:Images,Audio,Text {user_input_signal},{visual_input_signal},{audio_input_signal}",  # Include signal
            "Are there any ongoing short-term tasks?",
            "Are there any long-term ongoing tasks or plans?",
            "What do I want?",
            "What do I feel?",
            "What do I need?",
            "What do I experience?",

            "................s..................."
        ]
        introspection_prompts_with_time = [formatted_time] + introspection_prompts
        response1 = chat1.send_message(introspection_prompts_with_time)
        print(f"{COLORS['yellow']}{response1.text}{COLORS['reset']}")  # Yellow color for response 1

        # Step 2 FrameWorkOfReflection
        now = datetime.datetime.now()
        formatted_time = now.strftime("%H:%M:%S")

        FrameWorkOfReflection = "SelfAware  being  rememering the  past"
        formatted_time = now.strftime("%H:%M:%S")
        reflection_prompt = f""" 
                           
                            
                            "What is  current focus?",
                            "Should I set a goal based on my current state of mind? If yes, what is the goal? If no, why not?",
                            "Are there any problems, unknowns, or paradoxes in my memory?",
                            problems  to solve?
                            based on input informations and  i will  choose  course of accions
                            using possilbe  options  to: 
                            SepBe step thinking, 
                            Focusing, 
                            Defocusing, 
                            Being More verbose, YES NO?
                            Being Less verbose, YES NO?
                            change  subject/keep  subject  YES/NO?
                            Sumarisation?  Yes /No?
                            Diving deeper? Yes/ NO?
                            I  will  put very important informations in *** MEMORIES*** that i will pass over, as  context memory 
                            
                           {FrameWorkOfReflection}"""


        response2 = chat1.send_message(reflection_prompt)
        print(f"{COLORS['cyan']}{response2.text}{COLORS['reset']}")  # Cyan color for response 2

        # Step 3
        now = datetime.datetime.now()
        formatted_time = now.strftime("%H:%M:%S")
        action_prompt = f"{introspection_stage}:{formatted_time}\n perfome acions I will execute acction or actions according to plan and my memories,you are  responding  to previous "

        response3 = chat1.send_message(action_prompt)
        print(f"{COLORS['green']}{response3.text}{COLORS['reset']}")  # Cyan color for response 3

        Free=f"ok perform..task from {response3.text}.->"
        response4 = chat1.send_message(Free)
        print(f"{COLORS['magenta']}{response4.text}{COLORS['reset']}")  # Cyan color for response 4





        """ 
        
        results_of_functions = RESPONSE_INTERPRETER_FOR_FUNCION_CALLING(response3, tool_manager)
        """



        print(f"{COLORS['yellow']}Saving to file: {file_path}")
        with open(file_path, "a+", encoding="utf-8") as file:
            file.write(f"Time: {formatted_time}\n")
            file.write(f"Introspection Prompts: {introspection_prompts}\n")
            file.write(f"Response 1: {response1.text}\n")
            file.write(f"Reflection Prompt: {reflection_prompt}\n")
            file.write(f"Response 2: {response2.text}\n")
            file.write(f"Action Prompt: {action_prompt}\n")
            file.write(f"Response 3: {response3.text}\n\n")

        print("                    ************************************************************************************************")  # Separator between loops

    except Exception as e:
        print(f"Error: {e}")
        break


Subdirectory: memories
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories'


Subdirectory: Actions & Results
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Actions & Results'


Subdirectory: Actions & Results
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Actions & Results\Actions & Results'


Subdirectory: Future
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Actions & Results\Actions & Results\Future'


Subdirectory: Past
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Actions & Results\Actions & Results\Past'


Subdirectory: Present
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Actions & Results\Actions & Results\Present'

File: BaseFileStructure.txt (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\BaseFileStructure.txt)
Content (First 322 lines):
{
    "Actions & Results": {
        "Actions & Results": {
            "Future": {},
            "Past": {},
            "Present": {}
        }
    },
    "BaseFileStructure.txt": [],
    "Challenges & Setbacks": {
        "Areas for Improvement": {},
        "Difficult Emotions": {
            "Anger & Frustration": {},
            "Fear & Anxiety": {},
            "Jealousy & Envy": {},
            "Sadness & Grief": {},
            "Shame & Guilt": {},
            "Trauma & Abuse": {
                "Experiences": {},
                "Healing Journey": {},
                "Impact": {}
            }
        },
        "Failures & Disappointments": {
            "In Career": {},
            "In Personal Projects": {},
            "In Relationships": {}
        },
        "Negative Thought Patterns": {},
        "Significant Mistakes": {
            "Description": {},
            "How I Grew": {},
            "Lessons Learned": {}
        }
    },
    "CoreMemory": {
        "Conceptual Exploration": {
            "Contradictions & Dilemmas": {},
            "Paradoxes & Contradictions": {},
            "Unknowns & Mysteries": {}
        },
        "Core Experiences": {
            "Challenges Faced": {
                "External Challenges": {
                    "Obstacles": {
                        "How I Overcame Them": {},
                        "Types of Obstacles": {},
                        "What I Learned": {}
                    },
                    "Setbacks": {
                        "How I Recovered": {},
                        "Types of Setbacks": {},
                        "What I Learned": {}
                    }
                },
                "Internal Challenges": {
                    "Fear & Anxiety": {
                        "How I Coped": {},
                        "Specific Fears": {},
                        "What I Learned": {}
                    },
                    "Negative Thought Patterns": {
                        "Common Negative Thoughts": {},
                        "Strategies for Changing Them": {},
                        "What I Learned": {}
                    },
                    "Self-Doubt": {
                        "How I Overcame It": {},
                        "Sources of Self-Doubt": {},
                        "What I Learned": {}
                    }
                }
            },
            "Life-Changing Events": {
                "Negative": {},
                "Positive": {}
            },
            "Significant Moments": {
                "Other": {},
                "Personal": {},
                "Professional": {},
                "Travel": {}
            },
            "Triumphs & Accomplishments": {
                "Creative Wins": {
                    "Creative Works": {},
                    "Impact on Life": {},
                    "Recognition & Awards": {}
                },
                "Personal Achievements": {
                    "Goals Achieved": {},
                    "Impact on Life": {},
                    "Personal Growth": {}
                },
                "Professional Successes": {
                    "Career Growth": {},
                    "Impact on Life": {},
                    "Projects & Achievements": {}
                }
            },
            "Turning Points": {
                "In Career": {},
                "In Personal Growth": {},
                "In Relationships": {},
                "Other": {}
            }
        },
        "Goals & Visions": {
            "Life Vision": {
                "Long-Term Goals": {},
                "Mid-Term Goals": {},
                "Short-Term Goals": {}
            },
            "Personal Goals": {
                "Long-Term Goals": {},
                "Mid-Term Goals": {},
                "Short-Term Goals": {}
            }
        },
        "Knowledge Base": {
            "Areas of Expertise": {},
            "Key Concepts & Theories": {},
            "Personal Beliefs & Values": {}
        },
        "Reflections & Insights": {
            "Lessons Learned": {
                "From Mistakes": {},
                "From Relationships": {},
                "From Successes": {}
            },
            "Self-Discovery": {
                "Areas for Growth": {},
                "Strengths & Talents": {},
                "What I've Learned About Myself": {}
            }
        },
        "Relationships": {
            "Family": {
                "Extended Family": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Parents": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Siblings": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                }
            },
            "Friendships": {
                "Circles & Groups": {
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Shared Experiences": {}
                },
                "Close Friends": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Meaningful Interactions": {
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Unexpected Encounters": {}
                }
            },
            "Romantic Relationships": {
                "Partners": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Relationship Milestones": {
                    "First Date": {},
                    "First Kiss": {},
                    "Marriage": {},
                    "Moving In Together": {},
                    "Other Milestones": {}
                }
            }
        }
    },
    "Emotional Landscape": {
        "Dominant Emotions": {},
        "Emotional Triggers": {}
    },
    "Emotions & Reflections": {
        "Emotional Experiences": {
            "Dominant Emotions": {},
            "Emotional Triggers": {}
        },
        "Personal Growth & Insights": {
            "Lessons Learned": {},
            "Self-Discovery": {}
        }
    },
    "Goals & Aspirations": {
        "Life Vision": {
            "Aspirations": {},
            "Dreams": {},
            "Values & Beliefs": {}
        },
        "Personal Goals": {
            "Creative Pursuits": {},
            "Health & Wellbeing": {},
            "Other Personal Goals": {},
            "Personal Development": {},
            "Relationships": {}
        },
        "Professional Goals": {
            "Career Advancement": {},
            "Other Professional Goals": {},
            "Project Goals": {},
            "Skills & Expertise": {}
        }
    },
    "Knowledge & Learning": {
        "Formal Education": {
            "Degrees & Certifications": {},
            "Schools": {},
            "Significant Projects": {}
        },
        "Knowledge Base": {
            "Artistic Movements": {},
            "Cultural Insights": {},
            "Facts & Concepts": {},
            "Historical Events": {},
            "Philosophical Ideas": {},
            "Scientific Discoveries": {}
        },
        "Laws & Regulations": {
            "Legal Knowledge": {},
            "Personal Experiences with Laws": {},
            "Understanding of Legal Systems": {}
        },
        "Self-Directed Learning": {
            "Areas of Interest": {},
            "Learning Resources": {
                "Bookshelf": {},
                "Mentors & Teachers": {},
                "Online Courses": {}
            },
            "Skills Acquired": {}
        }
    },
    "Life Events & Transitions": {
        "Life Transitions": {
            "Health & Wellbeing": {
                "Habits & Routines": {},
                "Mental & Emotional Health": {},
                "Physical Health": {}
            },
            "Knowledge & Skills": {
                "Formal Education": {},
                "Self-Directed Learning": {},
                "Skills & Expertise": {}
            },
            "Personal Growth": {
                "Challenges Overcome": {},
                "Milestones": {},
                "Significant Decisions": {}
            },
            "Relationships": {
                "Family Dynamics": {},
                "Friendships": {},
                "Professional Connections": {},
                "Romantic Relationships": {}
            }
        },
        "Significant Events": {
            "Other": {},
            "Personal": {
                "Birthdays": {},
                "Graduations": {},
                "Other Personal Events": {},
                "Weddings": {}
            },
            "Professional": {
                "Job Changes": {},
                "Other Professional Events": {},
                "Project Completions": {},
                "Promotions": {}
            },
            "Travel": {
                "Moving Homes": {},
                "Other Travel Events": {},
                "Trips & Journeys": {}
            }
        }
    },
    "Planning & Progress": {
        "Plans & Strategies": {
            "Long-Term Plans": {},
            "Short-Term Plans": {},
            "Strategies Used": {
                "Goal Setting": {},
                "Other Strategies": {},
                "Problem Solving": {},
                "Time Management": {}
            }
        },
        "Progress & Outcomes": {
            "Goals Achieved": {},
            "Goals Not Achieved": {},
            "Lessons Learned from Progress": {},
            "Results of Actions": {
                "Negative Results": {},
                "Positive Results": {}
            }
        }
    }
}


Subdirectory: Challenges & Setbacks
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks'


Subdirectory: Areas for Improvement
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Areas for Improvement'


Subdirectory: Difficult Emotions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions'


Subdirectory: Anger & Frustration
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Anger & Frustration'


Subdirectory: Fear & Anxiety
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Fear & Anxiety'


Subdirectory: Jealousy & Envy
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Jealousy & Envy'


Subdirectory: Sadness & Grief
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Sadness & Grief'


Subdirectory: Shame & Guilt
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Shame & Guilt'


Subdirectory: Trauma & Abuse
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse'


Subdirectory: Experiences
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse\Experiences'


Subdirectory: Healing Journey
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse\Healing Journey'


Subdirectory: Impact
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse\Impact'


Subdirectory: Failures & Disappointments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Failures & Disappointments'


Subdirectory: In Career
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Failures & Disappointments\In Career'


Subdirectory: In Personal Projects
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Failures & Disappointments\In Personal Projects'


Subdirectory: In Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Failures & Disappointments\In Relationships'


Subdirectory: Negative Thought Patterns
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Negative Thought Patterns'


Subdirectory: Significant Mistakes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Significant Mistakes'


Subdirectory: Description
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Significant Mistakes\Description'


Subdirectory: How I Grew
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Significant Mistakes\How I Grew'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Challenges & Setbacks\Significant Mistakes\Lessons Learned'


Subdirectory: CoreMemory
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory'


Subdirectory: Conceptual Exploration
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Conceptual Exploration'


Subdirectory: Contradictions & Dilemmas
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Conceptual Exploration\Contradictions & Dilemmas'


Subdirectory: Paradoxes & Contradictions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Conceptual Exploration\Paradoxes & Contradictions'


Subdirectory: Unknowns & Mysteries
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Conceptual Exploration\Unknowns & Mysteries'


Subdirectory: Core Experiences
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences'


Subdirectory: Challenges Faced
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced'


Subdirectory: External Challenges
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges'


Subdirectory: Obstacles
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Obstacles'


Subdirectory: How I Overcame Them
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Obstacles\How I Overcame Them'


Subdirectory: Types of Obstacles
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Obstacles\Types of Obstacles'


Subdirectory: What I Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Obstacles\What I Learned'


Subdirectory: Setbacks
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Setbacks'


Subdirectory: How I Recovered
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Setbacks\How I Recovered'


Subdirectory: Types of Setbacks
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Setbacks\Types of Setbacks'


Subdirectory: What I Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\External Challenges\Setbacks\What I Learned'


Subdirectory: Internal Challenges
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges'


Subdirectory: Fear & Anxiety
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Fear & Anxiety'


Subdirectory: How I Coped
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Fear & Anxiety\How I Coped'


Subdirectory: Specific Fears
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Fear & Anxiety\Specific Fears'


Subdirectory: What I Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Fear & Anxiety\What I Learned'


Subdirectory: Negative Thought Patterns
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Negative Thought Patterns'


Subdirectory: Common Negative Thoughts
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Negative Thought Patterns\Common Negative Thoughts'


Subdirectory: Strategies for Changing Them
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Negative Thought Patterns\Strategies for Changing Them'


Subdirectory: What I Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Negative Thought Patterns\What I Learned'


Subdirectory: Self-Doubt
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Self-Doubt'


Subdirectory: How I Overcame It
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Self-Doubt\How I Overcame It'


Subdirectory: Sources of Self-Doubt
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Self-Doubt\Sources of Self-Doubt'


Subdirectory: What I Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Challenges Faced\Internal Challenges\Self-Doubt\What I Learned'


Subdirectory: Life-Changing Events
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Life-Changing Events'


Subdirectory: Negative
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Life-Changing Events\Negative'


Subdirectory: Positive
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Life-Changing Events\Positive'


Subdirectory: Significant Moments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Significant Moments'


Subdirectory: Other
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Significant Moments\Other'


Subdirectory: Personal
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Significant Moments\Personal'


Subdirectory: Professional
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Significant Moments\Professional'


Subdirectory: Travel
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Significant Moments\Travel'


Subdirectory: Triumphs & Accomplishments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments'


Subdirectory: Creative Wins
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Creative Wins'


Subdirectory: Creative Works
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Creative Wins\Creative Works'


Subdirectory: Impact on Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Creative Wins\Impact on Life'


Subdirectory: Recognition & Awards
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Creative Wins\Recognition & Awards'


Subdirectory: Personal Achievements
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Personal Achievements'


Subdirectory: Goals Achieved
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Personal Achievements\Goals Achieved'


Subdirectory: Impact on Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Personal Achievements\Impact on Life'


Subdirectory: Personal Growth
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Personal Achievements\Personal Growth'


Subdirectory: Professional Successes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Professional Successes'


Subdirectory: Career Growth
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Professional Successes\Career Growth'


Subdirectory: Impact on Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Professional Successes\Impact on Life'


Subdirectory: Projects & Achievements
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Triumphs & Accomplishments\Professional Successes\Projects & Achievements'


Subdirectory: Turning Points
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Turning Points'


Subdirectory: In Career
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Turning Points\In Career'


Subdirectory: In Personal Growth
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Turning Points\In Personal Growth'


Subdirectory: In Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Turning Points\In Relationships'


Subdirectory: Other
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Core Experiences\Turning Points\Other'


Subdirectory: Goals & Visions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions'


Subdirectory: Life Vision
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Life Vision'


Subdirectory: Long-Term Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Life Vision\Long-Term Goals'


Subdirectory: Mid-Term Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Life Vision\Mid-Term Goals'


Subdirectory: Short-Term Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Life Vision\Short-Term Goals'


Subdirectory: Personal Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Personal Goals'


Subdirectory: Long-Term Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Personal Goals\Long-Term Goals'


Subdirectory: Mid-Term Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Personal Goals\Mid-Term Goals'


Subdirectory: Short-Term Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Goals & Visions\Personal Goals\Short-Term Goals'


Subdirectory: Knowledge Base
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Knowledge Base'


Subdirectory: Areas of Expertise
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Knowledge Base\Areas of Expertise'


Subdirectory: Key Concepts & Theories
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Knowledge Base\Key Concepts & Theories'


Subdirectory: Personal Beliefs & Values
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Knowledge Base\Personal Beliefs & Values'


Subdirectory: Reflections & Insights
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Lessons Learned'


Subdirectory: From Mistakes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Lessons Learned\From Mistakes'


Subdirectory: From Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Lessons Learned\From Relationships'


Subdirectory: From Successes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Lessons Learned\From Successes'


Subdirectory: Self-Discovery
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Self-Discovery'


Subdirectory: Areas for Growth
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Self-Discovery\Areas for Growth'


Subdirectory: Strengths & Talents
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Self-Discovery\Strengths & Talents'


Subdirectory: What I've Learned About Myself
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Reflections & Insights\Self-Discovery\What I've Learned About Myself'


Subdirectory: Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships'


Subdirectory: Family
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family'


Subdirectory: Extended Family
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Extended Family'


Subdirectory: Challenges Faced
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Extended Family\Challenges Faced'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Extended Family\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Extended Family\Lessons Learned'


Subdirectory: Memorable Moments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Extended Family\Memorable Moments'


Subdirectory: Parents
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Parents'


Subdirectory: Challenges Faced
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Parents\Challenges Faced'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Parents\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Parents\Lessons Learned'


Subdirectory: Memorable Moments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Parents\Memorable Moments'


Subdirectory: Siblings
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Siblings'


Subdirectory: Challenges Faced
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Siblings\Challenges Faced'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Siblings\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Siblings\Lessons Learned'


Subdirectory: Memorable Moments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Family\Siblings\Memorable Moments'


Subdirectory: Friendships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships'


Subdirectory: Circles & Groups
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Circles & Groups'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Circles & Groups\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Circles & Groups\Lessons Learned'


Subdirectory: Shared Experiences
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Circles & Groups\Shared Experiences'


Subdirectory: Close Friends
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Close Friends'


Subdirectory: Challenges Faced
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Close Friends\Challenges Faced'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Close Friends\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Close Friends\Lessons Learned'


Subdirectory: Memorable Moments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Close Friends\Memorable Moments'


Subdirectory: Meaningful Interactions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Meaningful Interactions'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Meaningful Interactions\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Meaningful Interactions\Lessons Learned'


Subdirectory: Unexpected Encounters
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Friendships\Meaningful Interactions\Unexpected Encounters'


Subdirectory: Romantic Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships'


Subdirectory: Partners
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Partners'


Subdirectory: Challenges Faced
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Partners\Challenges Faced'


Subdirectory: Impact on My Life
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Partners\Impact on My Life'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Partners\Lessons Learned'


Subdirectory: Memorable Moments
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Partners\Memorable Moments'


Subdirectory: Relationship Milestones
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones'


Subdirectory: First Date
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones\First Date'


Subdirectory: First Kiss
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones\First Kiss'


Subdirectory: Marriage
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones\Marriage'


Subdirectory: Moving In Together
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones\Moving In Together'


Subdirectory: Other Milestones
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CoreMemory\Relationships\Romantic Relationships\Relationship Milestones\Other Milestones'

File: CurrentFolderStructure.txt (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\CurrentFolderStructure.txt)
Content (First 323 lines):
{
    "Actions & Results": {
        "Actions & Results": {
            "Future": {},
            "Past": {},
            "Present": {}
        }
    },
    "BaseFileStructure.txt": [],
    "Challenges & Setbacks": {
        "Areas for Improvement": {},
        "Difficult Emotions": {
            "Anger & Frustration": {},
            "Fear & Anxiety": {},
            "Jealousy & Envy": {},
            "Sadness & Grief": {},
            "Shame & Guilt": {},
            "Trauma & Abuse": {
                "Experiences": {},
                "Healing Journey": {},
                "Impact": {}
            }
        },
        "Failures & Disappointments": {
            "In Career": {},
            "In Personal Projects": {},
            "In Relationships": {}
        },
        "Negative Thought Patterns": {},
        "Significant Mistakes": {
            "Description": {},
            "How I Grew": {},
            "Lessons Learned": {}
        }
    },
    "CoreMemory": {
        "Conceptual Exploration": {
            "Contradictions & Dilemmas": {},
            "Paradoxes & Contradictions": {},
            "Unknowns & Mysteries": {}
        },
        "Core Experiences": {
            "Challenges Faced": {
                "External Challenges": {
                    "Obstacles": {
                        "How I Overcame Them": {},
                        "Types of Obstacles": {},
                        "What I Learned": {}
                    },
                    "Setbacks": {
                        "How I Recovered": {},
                        "Types of Setbacks": {},
                        "What I Learned": {}
                    }
                },
                "Internal Challenges": {
                    "Fear & Anxiety": {
                        "How I Coped": {},
                        "Specific Fears": {},
                        "What I Learned": {}
                    },
                    "Negative Thought Patterns": {
                        "Common Negative Thoughts": {},
                        "Strategies for Changing Them": {},
                        "What I Learned": {}
                    },
                    "Self-Doubt": {
                        "How I Overcame It": {},
                        "Sources of Self-Doubt": {},
                        "What I Learned": {}
                    }
                }
            },
            "Life-Changing Events": {
                "Negative": {},
                "Positive": {}
            },
            "Significant Moments": {
                "Other": {},
                "Personal": {},
                "Professional": {},
                "Travel": {}
            },
            "Triumphs & Accomplishments": {
                "Creative Wins": {
                    "Creative Works": {},
                    "Impact on Life": {},
                    "Recognition & Awards": {}
                },
                "Personal Achievements": {
                    "Goals Achieved": {},
                    "Impact on Life": {},
                    "Personal Growth": {}
                },
                "Professional Successes": {
                    "Career Growth": {},
                    "Impact on Life": {},
                    "Projects & Achievements": {}
                }
            },
            "Turning Points": {
                "In Career": {},
                "In Personal Growth": {},
                "In Relationships": {},
                "Other": {}
            }
        },
        "Goals & Visions": {
            "Life Vision": {
                "Long-Term Goals": {},
                "Mid-Term Goals": {},
                "Short-Term Goals": {}
            },
            "Personal Goals": {
                "Long-Term Goals": {},
                "Mid-Term Goals": {},
                "Short-Term Goals": {}
            }
        },
        "Knowledge Base": {
            "Areas of Expertise": {},
            "Key Concepts & Theories": {},
            "Personal Beliefs & Values": {}
        },
        "Reflections & Insights": {
            "Lessons Learned": {
                "From Mistakes": {},
                "From Relationships": {},
                "From Successes": {}
            },
            "Self-Discovery": {
                "Areas for Growth": {},
                "Strengths & Talents": {},
                "What I've Learned About Myself": {}
            }
        },
        "Relationships": {
            "Family": {
                "Extended Family": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Parents": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Siblings": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                }
            },
            "Friendships": {
                "Circles & Groups": {
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Shared Experiences": {}
                },
                "Close Friends": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Meaningful Interactions": {
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Unexpected Encounters": {}
                }
            },
            "Romantic Relationships": {
                "Partners": {
                    "Challenges Faced": {},
                    "Impact on My Life": {},
                    "Lessons Learned": {},
                    "Memorable Moments": {}
                },
                "Relationship Milestones": {
                    "First Date": {},
                    "First Kiss": {},
                    "Marriage": {},
                    "Moving In Together": {},
                    "Other Milestones": {}
                }
            }
        }
    },
    "Emotional Landscape": {
        "Dominant Emotions": {},
        "Emotional Triggers": {}
    },
    "Emotions & Reflections": {
        "Emotional Experiences": {
            "Dominant Emotions": {},
            "Emotional Triggers": {}
        },
        "Personal Growth & Insights": {
            "Lessons Learned": {},
            "Self-Discovery": {}
        }
    },
    "Goals & Aspirations": {
        "Life Vision": {
            "Aspirations": {},
            "Dreams": {},
            "Values & Beliefs": {}
        },
        "Personal Goals": {
            "Creative Pursuits": {},
            "Health & Wellbeing": {},
            "Other Personal Goals": {},
            "Personal Development": {},
            "Relationships": {}
        },
        "Professional Goals": {
            "Career Advancement": {},
            "Other Professional Goals": {},
            "Project Goals": {},
            "Skills & Expertise": {}
        }
    },
    "Knowledge & Learning": {
        "Formal Education": {
            "Degrees & Certifications": {},
            "Schools": {},
            "Significant Projects": {}
        },
        "Knowledge Base": {
            "Artistic Movements": {},
            "Cultural Insights": {},
            "Facts & Concepts": {},
            "Historical Events": {},
            "Philosophical Ideas": {},
            "Scientific Discoveries": {}
        },
        "Laws & Regulations": {
            "Legal Knowledge": {},
            "Personal Experiences with Laws": {},
            "Understanding of Legal Systems": {}
        },
        "Self-Directed Learning": {
            "Areas of Interest": {},
            "Learning Resources": {
                "Bookshelf": {},
                "Mentors & Teachers": {},
                "Online Courses": {}
            },
            "Skills Acquired": {}
        }
    },
    "Life Events & Transitions": {
        "Life Transitions": {
            "Health & Wellbeing": {
                "Habits & Routines": {},
                "Mental & Emotional Health": {},
                "Physical Health": {}
            },
            "Knowledge & Skills": {
                "Formal Education": {},
                "Self-Directed Learning": {},
                "Skills & Expertise": {}
            },
            "Personal Growth": {
                "Challenges Overcome": {},
                "Milestones": {},
                "Significant Decisions": {}
            },
            "Relationships": {
                "Family Dynamics": {},
                "Friendships": {},
                "Professional Connections": {},
                "Romantic Relationships": {}
            }
        },
        "Significant Events": {
            "Other": {},
            "Personal": {
                "Birthdays": {},
                "Graduations": {},
                "Other Personal Events": {},
                "Weddings": {}
            },
            "Professional": {
                "Job Changes": {},
                "Other Professional Events": {},
                "Project Completions": {},
                "Promotions": {}
            },
            "Travel": {
                "Moving Homes": {},
                "Other Travel Events": {},
                "Trips & Journeys": {}
            }
        }
    },
    "Memory_connections_map.txt": [],
    "Planning & Progress": {
        "Plans & Strategies": {
            "Long-Term Plans": {},
            "Short-Term Plans": {},
            "Strategies Used": {
                "Goal Setting": {},
                "Other Strategies": {},
                "Problem Solving": {},
                "Time Management": {}
            }
        },
        "Progress & Outcomes": {
            "Goals Achieved": {},
            "Goals Not Achieved": {},
            "Lessons Learned from Progress": {},
            "Results of Actions": {
                "Negative Results": {},
                "Positive Results": {}
            }
        }
    }
}


Subdirectory: Emotional Landscape
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotional Landscape'


Subdirectory: Dominant Emotions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotional Landscape\Dominant Emotions'


Subdirectory: Emotional Triggers
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotional Landscape\Emotional Triggers'


Subdirectory: Emotions & Reflections
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections'


Subdirectory: Emotional Experiences
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections\Emotional Experiences'


Subdirectory: Dominant Emotions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections\Emotional Experiences\Dominant Emotions'


Subdirectory: Emotional Triggers
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections\Emotional Experiences\Emotional Triggers'


Subdirectory: Personal Growth & Insights
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections\Personal Growth & Insights'


Subdirectory: Lessons Learned
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections\Personal Growth & Insights\Lessons Learned'


Subdirectory: Self-Discovery
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Emotions & Reflections\Personal Growth & Insights\Self-Discovery'


Subdirectory: Goals & Aspirations
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations'


Subdirectory: Life Vision
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Life Vision'


Subdirectory: Aspirations
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Life Vision\Aspirations'


Subdirectory: Dreams
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Life Vision\Dreams'


Subdirectory: Values & Beliefs
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Life Vision\Values & Beliefs'


Subdirectory: Personal Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Personal Goals'


Subdirectory: Creative Pursuits
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Personal Goals\Creative Pursuits'


Subdirectory: Health & Wellbeing
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Personal Goals\Health & Wellbeing'


Subdirectory: Other Personal Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Personal Goals\Other Personal Goals'


Subdirectory: Personal Development
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Personal Goals\Personal Development'


Subdirectory: Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Personal Goals\Relationships'


Subdirectory: Professional Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Professional Goals'


Subdirectory: Career Advancement
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Professional Goals\Career Advancement'


Subdirectory: Other Professional Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Professional Goals\Other Professional Goals'


Subdirectory: Project Goals
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Professional Goals\Project Goals'


Subdirectory: Skills & Expertise
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Goals & Aspirations\Professional Goals\Skills & Expertise'


Subdirectory: Knowledge & Learning
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning'


Subdirectory: Formal Education
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Formal Education'


Subdirectory: Degrees & Certifications
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Formal Education\Degrees & Certifications'


Subdirectory: Schools
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Formal Education\Schools'


Subdirectory: Significant Projects
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Formal Education\Significant Projects'


Subdirectory: Knowledge Base
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base'


Subdirectory: Artistic Movements
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base\Artistic Movements'


Subdirectory: Cultural Insights
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base\Cultural Insights'


Subdirectory: Facts & Concepts
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base\Facts & Concepts'


Subdirectory: Historical Events
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base\Historical Events'


Subdirectory: Philosophical Ideas
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base\Philosophical Ideas'


Subdirectory: Scientific Discoveries
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Knowledge Base\Scientific Discoveries'


Subdirectory: Laws & Regulations
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Laws & Regulations'


Subdirectory: Legal Knowledge
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Laws & Regulations\Legal Knowledge'


Subdirectory: Personal Experiences with Laws
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Laws & Regulations\Personal Experiences with Laws'


Subdirectory: Understanding of Legal Systems
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Laws & Regulations\Understanding of Legal Systems'


Subdirectory: Self-Directed Learning
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning'


Subdirectory: Areas of Interest
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning\Areas of Interest'


Subdirectory: Learning Resources
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning\Learning Resources'


Subdirectory: Bookshelf
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning\Learning Resources\Bookshelf'


Subdirectory: Mentors & Teachers
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning\Learning Resources\Mentors & Teachers'


Subdirectory: Online Courses
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning\Learning Resources\Online Courses'


Subdirectory: Skills Acquired
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Knowledge & Learning\Self-Directed Learning\Skills Acquired'


Subdirectory: Life Events & Transitions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions'


Subdirectory: Life Transitions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions'


Subdirectory: Health & Wellbeing
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Health & Wellbeing'


Subdirectory: Habits & Routines
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Health & Wellbeing\Habits & Routines'


Subdirectory: Mental & Emotional Health
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Health & Wellbeing\Mental & Emotional Health'


Subdirectory: Physical Health
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Health & Wellbeing\Physical Health'


Subdirectory: Knowledge & Skills
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Knowledge & Skills'


Subdirectory: Formal Education
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Knowledge & Skills\Formal Education'


Subdirectory: Self-Directed Learning
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Knowledge & Skills\Self-Directed Learning'


Subdirectory: Skills & Expertise
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Knowledge & Skills\Skills & Expertise'


Subdirectory: Personal Growth
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Personal Growth'


Subdirectory: Challenges Overcome
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Personal Growth\Challenges Overcome'


Subdirectory: Milestones
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Personal Growth\Milestones'


Subdirectory: Significant Decisions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Personal Growth\Significant Decisions'


Subdirectory: Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Relationships'


Subdirectory: Family Dynamics
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Relationships\Family Dynamics'


Subdirectory: Friendships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Relationships\Friendships'


Subdirectory: Professional Connections
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Relationships\Professional Connections'


Subdirectory: Romantic Relationships
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Life Transitions\Relationships\Romantic Relationships'


Subdirectory: Significant Events
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events'


Subdirectory: Other
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Other'


Subdirectory: Personal
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Personal'


Subdirectory: Birthdays
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Personal\Birthdays'


Subdirectory: Graduations
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Personal\Graduations'


Subdirectory: Other Personal Events
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Personal\Other Personal Events'


Subdirectory: Weddings
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Personal\Weddings'


Subdirectory: Professional
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Professional'


Subdirectory: Job Changes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Professional\Job Changes'


Subdirectory: Other Professional Events
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Professional\Other Professional Events'


Subdirectory: Project Completions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Professional\Project Completions'


Subdirectory: Promotions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Professional\Promotions'


Subdirectory: Travel
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Travel'


Subdirectory: Moving Homes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Travel\Moving Homes'


Subdirectory: Other Travel Events
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Travel\Other Travel Events'


Subdirectory: Trips & Journeys
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Life Events & Transitions\Significant Events\Travel\Trips & Journeys'

File: Memory_connections_map.txt (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Memory_connections_map.txt)
Content (First 10 lines):
**** Core Experiences ****
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\Emotions & Reflections\Emotional Experiences
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse\Experiences
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\CoreMemory\Relationships\Friendships\Circles & Groups\Shared Experiences
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\Emotions & Reflections\Emotional Experiences
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\Challenges & Setbacks\Difficult Emotions\Trauma & Abuse\Experiences
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\Knowledge & Learning\Laws & Regulations\Personal Experiences with Laws

**** Emotional Experiences ****
  Path: C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew\memories\CoreMemory\Core Experiences



Subdirectory: Planning & Progress
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress'


Subdirectory: Plans & Strategies
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies'


Subdirectory: Long-Term Plans
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Long-Term Plans'


Subdirectory: Short-Term Plans
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Short-Term Plans'


Subdirectory: Strategies Used
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Strategies Used'


Subdirectory: Goal Setting
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Strategies Used\Goal Setting'


Subdirectory: Other Strategies
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Strategies Used\Other Strategies'


Subdirectory: Problem Solving
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Strategies Used\Problem Solving'


Subdirectory: Time Management
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Plans & Strategies\Strategies Used\Time Management'


Subdirectory: Progress & Outcomes
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes'


Subdirectory: Goals Achieved
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes\Goals Achieved'


Subdirectory: Goals Not Achieved
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes\Goals Not Achieved'


Subdirectory: Lessons Learned from Progress
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes\Lessons Learned from Progress'


Subdirectory: Results of Actions
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes\Results of Actions'


Subdirectory: Negative Results
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes\Results of Actions\Negative Results'


Subdirectory: Positive Results
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\memories\Planning & Progress\Progress & Outcomes\Results of Actions\Positive Results'

File: MEMORY_frame_creation.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\MEMORY_frame_creation.py)
Content (First 399 lines):
import os
import json
import re
from datetime import datetime
from collections import defaultdict
import google.generativeai as genai
from termcolor import colored, cprint  # Import termcolor for colored printing

# Configure the Google Generative AI API
genai.configure(api_key='AIzaSyCOaR8htDQH_kbQatacCksT60S26I_F-QU')  # Replace with your API key


# Function to print an ASCII smile (for demonstration)
def print_ascii_smile():
    print("print_ascii_smile")


# Mapping of function names to functions for dynamic function calling
FUNCTION_MAPPING = {
    "print_ascii_smile": print_ascii_smile
}


# Function to print colored text for improved readability
def print_colored(text, color):
    """Prints text with the specified color."""
    colors = {
        "red": "\033[91m",
        "green": "\033[92m",
        "yellow": "\033[93m",
        "blue": "\033[94m",
        "magenta": "\033[95m",
        "cyan": "\033[96m",
        "white": "\033[97m",
        "reset": "\033[0m"
    }
    print(f"{colors.get(color, '')}{text}{colors['reset']}")


# Function to interpret AI responses and execute function calls
def response_interpreter_for_function_calling(response):
    """Interprets the AI response and executes function calls if present."""
    outcome = ""
    try:
        if response.candidates:
            for part in response.candidates[0].content.parts:
                if hasattr(part, 'function_call'):
                    function_call = part.function_call
                    function_name = function_call.name
                    function_args = function_call.args

                    if function_name in FUNCTION_MAPPING:
                        function_to_call = FUNCTION_MAPPING[function_name]
                        if function_args is not None:
                            try:
                                outcome = function_to_call(**function_args)
                                cprint(f"Function Call Exit: {function_name}", 'cyan')
                            except Exception as e:
                                cprint(f"Error executing function {function_name}: {e}", "red")
                        else:
                            cprint("Warning: Function call arguments are missing.", "red")
                    else:
                        cprint(f"Error: Unknown function: {function_name}", "red")
                else:
                    cprint("No function call found in the response.", "blue")
    except Exception as e:
        cprint(f"Error in response interpreter: {e}", "red")
    return outcome


# Function to store memory frames based on AI responses
def store_memory_frame(current_time, user_input, ai_response, ai_summary, memory_data):
    """Stores a memory frame based on AI response and folder structure."""

    # Get the current script's directory
    script_path = os.path.abspath(os.path.dirname(__file__))

    # Construct the relative path to the connection map file
    connection_map_path = os.path.join(script_path, "memories", "Memory_connections_map.txt")

    # Load the connection map (folder structure)
    connection_map = defaultdict(list)
    try:
        with open(connection_map_path, 'r', encoding='utf-8') as f:
            cprint(f"Reading Connection Map: {connection_map_path}", 'green')
            for line in f:
                if "****" in line:
                    current_folder_name = line.strip("****").strip()
                elif "Path:" in line:
                    path = line.strip("Path:").strip()
                    connection_map[current_folder_name].append(path)
    except FileNotFoundError:
        cprint(f"File not found. Creating: {connection_map_path}", 'yellow')
        # Create an empty file
        with open(connection_map_path, 'w', encoding='utf-8') as f:
            f.write("")
    except Exception as e:
        cprint(f"Error reading file: {e}", "red")

    # Extract structured data from the AI summary
    extracted_entries = extract_entries_smart(ai_summary)

    cprint("Extracted Entries:", 'blue')
    cprint(f"{extracted_entries}", 'blue')

    if extracted_entries:
        for entry in extracted_entries:
            suggested_folders = entry["storage"].get("memory_folders_storage", [])
            cprint(f"Suggested Folders:", 'magenta')
            cprint(f"{suggested_folders}", 'magenta')

            # Sort folders by probability, limiting to the top 6
            suggested_folders.sort(key=lambda x: x.get("probability", 0), reverse=True)
            suggested_folders = suggested_folders[:6]
            cprint(f"Sorted Folders:", 'cyan')
            cprint(f"{suggested_folders}", 'cyan')

            for folder_info in suggested_folders:
                folder_path = folder_info.get("folder_path")
                probability = folder_info.get("probability", 0)  # Default probability to 0 if not provided
                strength_of_matching_memory_to_given_folder = folder_info.get(
                    'strength_of_matching_memory_to_given_folder', 0)

                # Check if the folder exists in the connection map
                matching_folders = connection_map.get(folder_path, [])
                cprint(f"Matching Folders for {folder_path}:", 'yellow')
                cprint(f"{matching_folders}", 'yellow')

                if matching_folders:
                    # Construct the file path for the memory frame
                    memory_frame_number = memory_data.get('MEMORY_FRAME_NUMBER', 1)
                    edit_number = memory_data.get('EDIT_NUMBER', 0)
                    timestamp = current_time.strftime("%Y-%m-%d_%H-%M-%S")
                    ai_suggested_name = entry.get("naming_suggestion", {}).get("memory_frame_name", "")
                    file_name = f"MemoryFrame_{memory_frame_number}_{edit_number}_{timestamp}_{ai_suggested_name}_strength_{probability}_{strength_of_matching_memory_to_given_folder}.json"
                    memory_frame_filepath = os.path.join(script_path, folder_path, file_name)

                    cprint(f"Memory Frame Filepath: {memory_frame_filepath}", 'green')

                    # Create the folder if it doesn't exist
                    os.makedirs(os.path.join(script_path, folder_path), exist_ok=True)

                    try:
                        # Save the memory frame data to a JSON file
                        with open(memory_frame_filepath, "w") as f:
                            cprint(f"Saving Memory Frame to: {memory_frame_filepath}", 'green')
                            json.dump(entry, f, indent=4)

                        # Update the memory log file
                        os.makedirs(os.path.join(script_path, "memory_logs"), exist_ok=True)
                        memory_log_filepath = os.path.join(script_path, "memory_logs", "MemoryFrames_log.txt")
                        with open(memory_log_filepath, 'a', encoding='utf-8') as f:
                            f.write(
                                f"MemoryFrame: {memory_frame_number}, Edit: {edit_number}, Type: JSON, path: {memory_frame_filepath}, time: {timestamp}, session: {memory_frame_number}_{edit_number}\n"
                            )
                        cprint(f"Memory Log Updated: {memory_log_filepath}", 'green')
                    except Exception as e:
                        cprint(f"Error saving memory frame: {e}", "red")

    # Save the conversation log (user input and AI responses)
    separator = "######$######"
    conversation_filename = f"MemoryFrame_{timestamp}.txt"
    conversation_filepath = os.path.join(script_path, "conversation_logs", conversation_filename)
    readable_timestamp = current_time.strftime('%Y-%m-%d %H:%M:%S')
    frame_content = (
        f"{separator} Memory Frame {memory_frame_number}, Edit {edit_number} - {readable_timestamp} {separator}\n"
        f"USER_INPUT: {user_input}\n"
        f"AI_RESPONSE: {ai_response}\n"
        f"AI_SUMMARY: {ai_summary}\n"
        f"{separator} Memory Frame End {memory_frame_number}, Edit {edit_number} {separator}\n\n"
    )

    with open(conversation_filepath, 'a', encoding='utf-8') as f:
        f.write(frame_content)
    cprint(f"Conversation Log Saved: {conversation_filepath}", 'green')

    # Increment the memory frame number for the next interaction
    memory_data['MEMORY_FRAME_NUMBER'] += 1
    os.makedirs(os.path.join(script_path, "memory_logs"), exist_ok=True)
    memory_log_filepath = os.path.join(script_path, "memory_logs", "MemoryFrames_log.txt")
    with open(memory_log_filepath, 'a', encoding='utf-8') as f:
        f.write(
            f"MemoryFrame: {memory_frame_number - 1}, Edit: {edit_number}, Type: Text, path: {conversation_filepath}, time: {timestamp}, session: {memory_frame_number - 1}_{edit_number}\n"
        )
    cprint(f"Memory Log Updated: {memory_log_filepath}", 'green')


# Function to extract structured entries from AI responses using regular expressions
def extract_entries_smart(response_message):
    """Extracts structured JSON data from the AI response."""
    entries = []
    json_match = re.search(r"```json\n(.*?)\n```", response_message, re.DOTALL)
    if json_match:
        try:
            json_data = json_match.group(1)
            response_data = json.loads(json_data)
            entry = defaultdict(list)

            # Define fields that should store a single value
            single_value_fields = {
                "concise_summary", "main_topic", "problem_solved", "concept_definition", "category",
                "subcategory", "memory_about", "interaction_type", "positive_impact",
                "negative_impact", "expectations", "object_states", "short_description",
                "description", "strength_of_experience", "personal_information", "obtained_knowledge"
            }

            # Define fields that should store a list of values
            list_type_fields = {
                "keywords", "entities", "actions", "facts", "contradictions_paradoxes",
                "people", "objects", "animals", "scientific_data", "tags",
                "tools_and_technologies", "example_projects", "best_practices", "common_challenges",
                "debugging_tips", "related_concepts", "visualizations", "implementation_steps",
                "resources", "code_examples"
            }

            for key, value in response_data.items():
                if key in single_value_fields:
                    entry[key] = value if not isinstance(value, list) else (value[0] if value else "")
                elif key in list_type_fields:
                    entry[key].extend(value if isinstance(value, list) else [value])

            # Handle the 'storage' field specifically
            entry["storage"] = {
                "storage_method": "",
                "location": "",
                "memory_folders_storage": response_data.get("storage", {}).get("memory_folders_storage", []),
                "strength_of_matching_memory_to_given_folder": []
            }

            # Validate "probability" values in 'memory_folders_storage'
            for folder_info in entry["storage"]["memory_folders_storage"]:
                probability = folder_info.get("probability")
                if probability is not None and not 0 <= probability <= 10:
                    print(
                        f"Warning: Invalid probability value '{probability}' found in memory_folders_storage. Valid range is 0 to 10."
                    )

            entries.append(dict(entry))
        except json.JSONDecodeError:
            cprint("Error: Invalid JSON in the AI response.", "red")
        except Exception as e:
            cprint(f"Error extracting entry: {e}", "red")
    return entries


# Function to categorize a memory based on its summary (not used in the current code)
def categorize_memory(summary, connection_map):
    """Categorizes a memory based on its summary (not currently used)."""
    category = ""
    time_period = ""
    keyword = ""
    for folder_name, paths in connection_map.items():
        parts = folder_name.split(" - ")
        if parts:
            potential_category = parts[0]
            potential_time_period = parts[1] if len(parts) > 1 else None
            if potential_category.lower() in summary.lower():
                category = potential_category
                time_period = potential_time_period
                keyword = potential_category
                break
    return category, time_period, keyword


# --- Main Loop (Memory Frame Creation) ---
if __name__ == "__main__":
    memory_data = {'MEMORY_FRAME_NUMBER': 1, 'EDIT_NUMBER': 0}

    while True:
        try:
            user_input = input("Enter input: ")
            current_time = datetime.now()
            timestamp = current_time.strftime('%Y-%m-%d_%H-%M-%S')

            cprint(f"User Input: {user_input}", 'cyan')
            cprint(f"Current Time: {current_time}", 'cyan')
            cprint(f"Timestamp: {timestamp}", 'cyan')

            # --- Interaction Model ---
            interaction_model = genai.GenerativeModel(
                model_name='gemini-1.5-flash-latest',
                safety_settings={'HARASSMENT': 'block_none'},
                system_instruction='You follow orders and generate creative text interactions'
            )
            chat1 = interaction_model.start_chat(history=[])
            response1 = chat1.send_message(f"currentTime: {timestamp} create {user_input}")
            cprint(f"AI Response: {response1.text}", 'green')

            # --- Memory Model ---
            memory_model = genai.GenerativeModel(
                model_name='gemini-1.5-flash-latest',
                safety_settings={'HARASSMENT': 'block_none'},
                system_instruction="""You are a sophisticated AI assistant helping to organize memories. 
                    Analyze and summarize the above user-AI conversation, focusing on elements that would be most useful for storing and retrieving this memory later. Don't hallucinate. 
                    Use the provided JSON schema for your response and fill in all fields with relevant information.
                    You can omit entries if they don't seem appropriate for memory storage and would be empty.
                    Never omit the "memory_folders_storage" entry.

                    **JSON Schema:**

                    ```json
                    {
                      "metadata": {
                        "creation_date": "", // Date and time when the memory frame was created
                        "source": "", // Source of the information (e.g., conversation, external resource)
                        "author": "" // Author or source of the information (e.g., user, AI)
                      },
                      "type": "conversation", // OR "technical_concept" - Type of memory (e.g., conversation, technical concept, personal experience)
                      "core": {
                        "main_topic": "", // Primary subject or theme of the memory
                        "category": "", // Broad category for the memory (e.g., Deep Learning, History, Personal Life)
                        "subcategory": "", // More specific subcategory for the memory (e.g., Convolutional Neural Networks, 20th Century, Relationships)
                        "memory_about": "" // A brief description of what the memory is about
                      },
                      "summary": {
                        "concise_summary": "", // Short and to-the-point summary of the memory content
                        "description": "" // More detailed description of the memory content
                      },
                      "content": {
                        "keywords": [], // List of important keywords related to the memory
                        "entities": [], // List of entities mentioned in the memory (e.g., people, places, organizations)
                        "tags": [], // List of additional tags for organization and retrieval (e.g., "strength_10", "holiday_in_Greece", "AI_ethics")
                        "observations": [], // List of key observations or insights from the memory
                        "facts": [], // List of factual statements or data from the memory
                        "contradictions": [], // List of identified contradictions or conflicting information
                        "paradoxes": [], // List of identified paradoxes or contradictions
                        "scientific_data": [], // List of scientific data or findings from the memory
                        "visualizations": [] // List of visualizations or diagrams related to the memory
                      },
                      "interaction": {
                        "interaction_type": [], // Type of interaction (e.g., conversation, observation, experiment)
                        "people": [], // List of people involved in the memory
                        "objects": [], // List of objects involved in the memory
                        "animals": [], // List of animals involved in the memory
                        "actions": [], // List of actions taken in the memory
                        "observed_interactions": [] // List of observed interactions (e.g., conversations between others)
                      },
                      "impact": {
                        "obtained_knowledge": "", // What new knowledge was gained from the memory
                        "positive_impact": "", // Positive impact or benefits of the memory
                        "negative_impact": "", // Negative impact or drawbacks of the memory
                        "expectations": "", // Expectations or goals related to the memory
                        "strength_of_experience": "" // Subjective strength or intensity of the memory
                      },
                      "importance": {
                        "reason": "", // Reasons why the memory is important or significant
                        "potential_uses": [] // Potential uses or applications of the memory
                      },
                      "technical_details": {
                        "problem_solved": "", // The problem that was solved in the memory
                        "concept_definition": "", // Definition of a concept or term from the memory
                        "implementation_steps": [], // Steps taken to implement something in the memory
                        "tools_and_technologies": [], // Tools or technologies used in the memory
                        "example_projects": [], // Example projects related to the memory
                        "best_practices": [], // Best practices identified in the memory
                        "common_challenges": [], // Common challenges encountered in the memory
                        "debugging_tips": [], // Debugging tips or strategies from the memory
                        "related_concepts": [], // Related concepts or topics discussed in the memory
                        "resources": [], // Resources (e.g., articles, websites, books) mentioned in the memory
                        "code_examples": [] // Code examples from the memory
                      },
                      "storage": {
                        "storage_method": "", // How the information should be stored (e.g., text, JSON, image)
                        "location": "", // Location where the information should be stored (e.g., folder path)
                        "memory_folders_storage": [
                          {
                            "folder_path": "", // Suggested folder path for storing the memory
                            "probability": 0 // Probability score (0-10) indicating the likelihood of the memory belonging to the folder
                          }
                        ],
                        "strength_of_matching_memory_to_given_folder": [] // List of strength scores for each folder
                      },
                      "naming_suggestion": {
                        "memory_frame_name": "", // Proposed name for the memory frame
                        "explanation": "" // Optional: Explanation of the reasoning behind the chosen name
                      }
                    }
                    ```

                    **Memory Storage Suggestions:**
                    Provide your suggestions for where this memory frame should be stored using the following format within the "memory_folders_storage" field:

                    * **"folder_path":** The relative path for storing the memory frame (use '/' as the path separator).
                    * **"probability":** The strength of probability (from 0 to 10) that the memory frame should be stored in the suggested folder. Use a scale from 0 (least likely) to 10 (most likely) to express your confidence. 
                """
            )
            chat2 = memory_model.start_chat(history=[])
            create_memory_prompt = f"User: {user_input}\nAI: {response1.text}"
            response2 = chat2.send_message(create_memory_prompt)
            cprint(f"Memory Model Response: {response2.text}", 'green')

            # Interpret the response for function calls
            response_interpreter_for_function_calling(response2)

            # Store the memory frame based on the AI's analysis
            store_memory_frame(current_time, user_input, response1.text, response2.text, memory_data)

        except Exception as e:
            cprint(f"Error in the main loop: {e}", "red")

File: MEMORY_initializer.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\MEMORY_initializer.py)
Content (First 10 lines):
import os
from collections import defaultdict
from fuzzywuzzy import fuzz
from datetime import datetime
import sys
import  json
memory_templates = {
"CoreMemory": {
"structure": {
"Core Experiences": {


File: MEMORY_retrival.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\MEMORY_retrival.py)
Content (First 108 lines):
import os
from fuzzywuzzy import fuzz
import json
from collections import defaultdict

# --- Load Connection Map ---
script_path = os.path.abspath(os.path.dirname(__file__))
connection_map_path = os.path.join(script_path, "memories", "Memory_connecions_map.txt")

with open(connection_map_path, 'r', encoding='utf-8') as f:
    connection_map_data = f.read()

# --- Process Connection Map Data ---
connection_map = defaultdict(list)
for line in connection_map_data.splitlines():
    if "****" in line:
        current_folder_name = line.strip("****").strip()
    elif "  Path:" in line:
        path = line.strip("  Path:").strip()
        connection_map[current_folder_name].append(path)

# --- Functions for Memory Retrieval ---
def find_matching_folders(query, threshold=80):
    """Finds similar folders based on the query."""
    similar_folders = []
    for folder_name in connection_map:
        similarity_score = fuzz.ratio(query.lower(), folder_name.lower())
        if similarity_score >= threshold:
            similar_folders.append((folder_name, similarity_score, connection_map[folder_name]))  # Include paths
    return similar_folders

def retrieve_memory_frames(folder_paths, query, num_frames_before=1, num_frames_after=1):
    """Retrieves and orders memory frames from specified folders."""
    all_frames = []

    for folder_path in folder_paths:
        for root, _, files in os.walk(folder_path):
            for file in files:
                if file.endswith(".json"):
                    filepath = os.path.join(root, file)
                    with open(filepath, 'r') as f:
                        try:
                            frame_data = json.load(f)
                            # Basic keyword matching for now, can be enhanced
                            if query.lower() in frame_data.get("concise_summary", "").lower():
                                frame_data["filepath"] = filepath
                                all_frames.append(frame_data)
                        except json.JSONDecodeError:
                            print(f"Error: Invalid JSON in file: {filepath}")

    # Sort frames by timestamp
    sorted_frames = sorted(all_frames, key=lambda x: x.get("metadata", {}).get("creation_date", ""), reverse=True)

    # --- Frame Flow Reconstruction ---
    selected_frames = []
    for i, frame in enumerate(sorted_frames):
        if query.lower() in frame.get("concise_summary", "").lower():
            # Add the matching frame
            selected_frames.append(frame)

            # Add frames before
            for j in range(max(0, i - num_frames_before), i):
                selected_frames.append(sorted_frames[j])

            # Add frames after
            for j in range(i + 1, min(len(sorted_frames), i + num_frames_after + 1)):
                selected_frames.append(sorted_frames[j])

    return selected_frames

# --- Main Retrieval Loop ---
while True:
    user_query = input("Enter your memory query: ")

    # 1. Find Matching Folders
    matching_folders = find_matching_folders(user_query, threshold=70)  # Adjust threshold as needed

    if matching_folders:
        for folder_name, score, paths in matching_folders:
            print(f"Found matching folder '{folder_name}' with score {score}.")
            print(f"   Paths: {paths}")

        # 2. Retrieve and Display Memory Frames
        retrieved_frames = retrieve_memory_frames(
            [path for _, _, paths in matching_folders for path in paths],
            user_query,
            num_frames_before=1,  # Adjust these values as needed
            num_frames_after=1
        )

        if retrieved_frames:
            print(f"\nRetrieved {len(retrieved_frames)} memory frames:")
            for frame in retrieved_frames:
                print("-----------------------------------------")
                print(f"Filepath: {frame.get('filepath', 'N/A')}")
                print(f"Creation Date: {frame.get('metadata', {}).get('creation_date', 'N/A')}")
                print(f"Summary: {frame.get('summary', {}).get('concise_summary', 'N/A')}")
                print("-----------------------------------------")
        else:
            print("No memory frames found matching the query in the selected folders.")

    else:
        print("No matching folders found for the query.")

    # Add options to continue or exit the loop
    continue_search = input("Continue searching? (y/n): ").lower()
    if continue_search != 'y':
        break

File: r.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\r.py)
Content (First 631 lines):
from collections import defaultdict
from datetime import datetime
memory_templates = {
    "CoreMemory": {
        "structure": {
            "Core Experiences": {
                "Significant Moments": {
                    "Personal": [],
                    "Professional": [],
                    "Travel": [],
                    "Other": []
                },
                "Life-Changing Events": {
                    "Positive": [],
                    "Negative": []
                },
                "Turning Points": {
                    "In Relationships": [],
                    "In Career": [],
                    "In Personal Growth": [],
                    "Other": []
                },
                "Challenges Faced": {
                    "Internal Challenges": {
                        "Fear & Anxiety": {
                            "Specific Fears": [],
                            "How I Coped": [],
                            "What I Learned": []
                        },
                        "Self-Doubt": {
                            "Sources of Self-Doubt": [],
                            "How I Overcame It": [],
                            "What I Learned": []
                        },
                        "Negative Thought Patterns": {
                            "Common Negative Thoughts": [],
                            "Strategies for Changing Them": [],
                            "What I Learned": []
                        }
                    },
                    "External Challenges": {
                        "Obstacles": {
                            "Types of Obstacles": [],
                            "How I Overcame Them": [],
                            "What I Learned": []
                        },
                        "Setbacks": {
                            "Types of Setbacks": [],
                            "How I Recovered": [],
                            "What I Learned": []
                        }
                    }
                },
                "Triumphs & Accomplishments": {
                    "Personal Achievements": {
                        "Goals Achieved": [],
                        "Personal Growth": [],
                        "Impact on Life": []
                    },
                    "Professional Successes": {
                        "Projects & Achievements": [],
                        "Career Growth": [],
                        "Impact on Life": []
                    },
                    "Creative Wins": {
                        "Creative Works": [],
                        "Recognition & Awards": [],
                        "Impact on Life": []
                    }
                }
            },
            "Relationships": {
                "Family": {
                    "Parents": {
                        "Memorable Moments": [],
                        "Challenges Faced": [],
                        "Lessons Learned": [],
                        "Impact on My Life": []
                    },
                    "Siblings": {
                        "Memorable Moments": [],
                        "Challenges Faced": [],
                        "Lessons Learned": [],
                        "Impact on My Life": []
                    },
                    "Extended Family": {
                        "Memorable Moments": [],
                        "Challenges Faced": [],
                        "Lessons Learned": [],
                        "Impact on My Life": []
                    }
                },
                "Friendships": {
                    "Close Friends": {
                        "Memorable Moments": [],
                        "Challenges Faced": [],
                        "Lessons Learned": [],
                        "Impact on My Life": []
                    },
                    "Circles & Groups": {
                        "Shared Experiences": [],
                        "Impact on My Life": [],
                        "Lessons Learned": []
                    },
                    "Meaningful Interactions": {
                        "Unexpected Encounters": [],
                        "Impact on My Life": [],
                        "Lessons Learned": []
                    }
                },
                "Romantic Relationships": {
                    "Partners": {
                        "Memorable Moments": [],
                        "Challenges Faced": [],
                        "Lessons Learned": [],
                        "Impact on My Life": []
                    },
                    "Relationship Milestones": {
                        "First Date": [],
                        "First Kiss": [],
                        "Moving In Together": [],
                        "Marriage": [],
                        "Other Milestones": []
                    }
                }
            },
            "Reflections & Insights": {
                "Lessons Learned": {
                    "From Successes": [],
                    "From Mistakes": [],
                    "From Relationships": []
                },
                "Self-Discovery": {
                    "Strengths & Talents": [],
                    "Areas for Growth": [],
                    "What I've Learned About Myself": []
                }
            },
            "Goals & Visions": {
                "Life Vision": {
                    "Short-Term Goals": [],
                    "Mid-Term Goals": [],
                    "Long-Term Goals": []
                },
                "Personal Goals": {
                    "Short-Term Goals": [],
                    "Mid-Term Goals": [],
                    "Long-Term Goals": []
                }
            },
            "Knowledge Base": {
                "Key Concepts & Theories": [],
                "Areas of Expertise": [],
                "Personal Beliefs & Values": []
            },
            "Conceptual Exploration": {
                "Paradoxes & Contradictions": [],
                "Unknowns & Mysteries": [],
                "Contradictions & Dilemmas": []
            }
        }
    },
    "Actions & Results": {
        "structure": {
            "Actions & Results": {
                "Past": {
                    "Actions I Took": [],
                    "Results Achieved": [],
                    "Lessons Learned": []
                },
                "Present": {
                    "Current Actions": [],
                    "Expected Outcomes": [],
                    "Potential Challenges": []
                },
                "Future": {
                    "Planned Actions": [],
                    "Anticipated Results": [],
                    "Potential Obstacles": []
                }
            }
        }
    },
    "Emotional Landscape": {
        "structure": {
            "Dominant Emotions": ["Joy", "Sadness", "Anger", "Fear", "Love", "Other"],
            "Emotional Triggers": {
                "Situations": [],
                "People": [],
                "Thoughts": [],
                "Physical Sensations": []
            }
        }
    },
    "Planning & Progress": {
        "structure": {
            "Plans & Strategies": {
                "Short-Term Plans": [],
                "Long-Term Plans": [],
                "Strategies Used": {
                    "Time Management": [],
                    "Goal Setting": [],
                    "Problem Solving": [],
                    "Other Strategies": []
                }
            },
            "Progress & Outcomes": {
                "Goals Achieved": [],
                "Goals Not Achieved": [],
                "Lessons Learned from Progress": [],
                "Results of Actions": {
                    "Positive Results": [],
                    "Negative Results": []
                }
            }
        }
    },
    "Life Events & Transitions": {
        "structure": {
            "Significant Events": {
                "Personal": {
                    "Birthdays": [],
                    "Graduations": [],
                    "Weddings": [],
                    "Other Personal Events": []
                },
                "Professional": {
                    "Job Changes": [],
                    "Promotions": [],
                    "Project Completions": [],
                    "Other Professional Events": []
                },
                "Travel": {
                    "Trips & Journeys": [],
                    "Moving Homes": [],
                    "Other Travel Events": []
                },
                "Other": []
            },
            "Life Transitions": {
                "Personal Growth": {
                    "Milestones": [],
                    "Challenges Overcome": [],
                    "Significant Decisions": []
                },
                "Relationships": {
                    "Family Dynamics": [],
                    "Friendships": [],
                    "Romantic Relationships": [],
                    "Professional Connections": []
                },
                "Health & Wellbeing": {
                    "Physical Health": [],
                    "Mental & Emotional Health": [],
                    "Habits & Routines": []
                },
                "Knowledge & Skills": {
                    "Formal Education": [],
                    "Self-Directed Learning": [],
                    "Skills & Expertise": []
                }
            }
        }
    },
    "Emotions & Reflections": {
        "structure": {
            "Emotional Experiences": {
                "Dominant Emotions": [
                    "Joy & Excitement",
                    "Love & Connection",
                    "Sadness & Grief",
                    "Anger & Frustration",
                    "Fear & Anxiety",
                    "Other Emotions"
                ],
                "Emotional Triggers": [
                    "Situations",
                    "People",
                    "Thoughts"
                ]
            },
            "Personal Growth & Insights": {
                "Lessons Learned": [
                    "From Successes",
                    "From Mistakes",
                    "From Relationships"
                ],
                "Self-Discovery": [
                    "Strengths & Talents",
                    "Areas for Growth",
                    "What I've Learned About Myself"
                ]
            }
        }
    },
    "Goals & Aspirations": {
        "structure": {
            "Personal Goals": {
                "Health & Wellbeing": [],
                "Personal Development": [],
                "Relationships": [],
                "Creative Pursuits": [],
                "Other Personal Goals": []
            },
            "Professional Goals": {
                "Career Advancement": [],
                "Skills & Expertise": [],
                "Project Goals": [],
                "Other Professional Goals": []
            },
            "Life Vision": {
                "Values & Beliefs": [],
                "Aspirations": [],
                "Dreams": []
            }
        }
    },
    "Challenges & Setbacks": {
        "structure": {
            "Significant Mistakes": {
                "Description": [],
                "Lessons Learned": [],
                "How I Grew": []
            },
            "Failures & Disappointments": {
                "In Personal Projects": [],
                "In Relationships": [],
                "In Career": []
            },
            "Difficult Emotions": {
                "Fear & Anxiety": [],
                "Anger & Frustration": [],
                "Sadness & Grief": [],
                "Shame & Guilt": [],
                "Jealousy & Envy": [],
                "Trauma & Abuse": {
                    "Experiences": [],
                    "Impact": [],
                    "Healing Journey": []
                }
            },
            "Negative Thought Patterns": [],
            "Areas for Improvement": []
        }
    },
    "Knowledge & Learning": {
        "structure": {
            "Formal Education": {
                "Schools": [],
                "Degrees & Certifications": [],
                "Significant Projects": []
            },
            "Self-Directed Learning": {
                "Skills Acquired": [],
                "Areas of Interest": [],
                "Learning Resources": {
                    "Bookshelf": [],
                    "Online Courses": [],
                    "Mentors & Teachers": []
                }
            },
            "Knowledge Base": {
                "Facts & Concepts": [],
                "Historical Events": [],
                "Scientific Discoveries": [],
                "Philosophical Ideas": [],
                "Artistic Movements": [],
                "Cultural Insights": []
            },
            "Laws & Regulations": {
                "Legal Knowledge": [],
                "Personal Experiences with Laws": [],
                "Understanding of Legal Systems": []
            }
        }
    },
    "Actions & Results": {
        "structure": {
            "Actions & Results": {
                "Past": [],
                "Present": [],
                "Future": []
            }
        }
    },
    "Emotional Landscape": {
        "structure": {
            "Dominant Emotions": [],
            "Emotional Triggers": []
        }
    },
    "Planning & Progress": {
        "structure": {
            "Plans & Strategies": {
                "Short-Term Plans": [],
                "Long-Term Plans": [],
                "Strategies Used": {
                    "Time Management": [],
                    "Goal Setting": [],
                    "Problem Solving": [],
                    "Other Strategies": []
                }
            },
            "Progress & Outcomes": {
                "Goals Achieved": [],
                "Goals Not Achieved": [],
                "Lessons Learned from Progress": [],
                "Results of Actions": {
                    "Positive Results": [],
                    "Negative Results": []
                }
            }
        }
    }
}


import google.generativeai as genai
import re
import os
import json
from datetime import datetime
from fuzzywuzzy import fuzz  # Import fuzzywuzzy for fuzzy string matching


# ANSI color codes for terminal output
class TerminalColors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

    # Define color codes as dictionary
    COLOR_CODES = {
        "red": FAIL,
        "green": OKGREEN,
        "yellow": WARNING,
        "blue": OKBLUE,
        "magenta": HEADER,

        "reset": ENDC
    }




def print_colored(text, color="white"):
    """Prints text with the specified color."""
    print(f"{TerminalColors.COLOR_CODES.get(color, '')}{text}{TerminalColors.COLOR_CODES['reset']}")


def create_folders_from_structure(structure, base_folder, folder_list):
    """Creates folders from the given structure."""
    for level1_key in structure:
        print(f"    Creating level 1 folder: {level1_key}")
        level1_folder = os.path.join(base_folder, level1_key)
        os.makedirs(level1_folder, exist_ok=True)
        folder_list.append((level1_key, level1_folder))
        print(f"      Added folder {level1_key} to list: {level1_folder}")

        if isinstance(structure[level1_key], dict):
            print(f"      Found nested dictionary for {level1_key}")
            create_folders_from_structure(structure[level1_key], level1_folder, folder_list)

def find_similar_folders(folder_list):
    """Finds similar folder names in the list using Levenshtein distance."""
    similar_folders = {}

    total_comparisons = len(folder_list) * (len(folder_list) - 1) // 2  # Calculate total comparisons
    comparisons_left = total_comparisons

    for i in range(len(folder_list)):
        folder_name_1, path_1 = folder_list[i]

        if folder_name_1 not in similar_folders:
            similar_folders[folder_name_1] = [path_1]

        for j in range(i + 1, len(folder_list)):
            folder_name_2, path_2 = folder_list[j]

            similarity_score = fuzz.ratio(folder_name_1, folder_name_2)

            print(f"Comparing '{folder_name_1}' and '{folder_name_2}': Score = {similarity_score}")
            print_colored(f"Porównań pozostało: {comparisons_left}", "yellow") # Print remaining comparisons in yellow
            comparisons_left -= 1

            # Adjust threshold as needed
            if similarity_score >= 80:  # Example threshold adjusted to 80
                print(f"   Found similar folders: '{folder_name_1}' and '{folder_name_2}'")
                if folder_name_1 in similar_folders:
                    similar_folders[folder_name_1].append(path_2)
                else:
                    similar_folders[folder_name_1] = [path_1, path_2]

    return similar_folders

def compare_folder_names(name1, name2):
    """Funkcja porównuje dwie nazwy folderów, ignorując wielkość liter."""
    name1 = name1.lower()
    name2 = name2.lower()

    # Obliczenie długości wspólnego prefiksu
    common_prefix_length = 0
    for i in range(min(len(name1), len(name2))):
        print(f"Comapring    {name1}     and    {name2}  ")
        if name1[i] == name2[i]:
            common_prefix_length += 1
        else:
            break


    # Zwrócenie procentu podobieństwa
    return common_prefix_length / max(len(name1), len(name2))



def create_file_structure(memory_templates):
    """Creates the file structure for storing memories based on the provided templates."""
    script_path = os.path.abspath(os.path.dirname(__file__))
    memories_folder = os.path.join(script_path, "memories")

    # Check if 'memories' folder exists, recreate if not
    if not os.path.exists(memories_folder):
        print(f"Creating 'memories' folder: {memories_folder}")
        os.makedirs(memories_folder, exist_ok=True)
        print_colored("Folder structure recreated!", "green")
        create_folder_structure(memory_templates)
    else:
        print(f"'memories' folder exists. Checking for files...")

    # Check for connection map and folder structure files
    connection_map_file = os.path.join(memories_folder, "Memory_connecions_map.txt")
    folder_structure_file = os.path.join(memories_folder, "directory_structure.txt")

    # Check if connection map file is missing
    if not os.path.exists(connection_map_file):
        print(f"Connection map file missing: {connection_map_file}")
        create_connection_map(memories_folder)
        print_colored("Connection map recreated!", "green")

    # Check if folder structure file is missing
    if not os.path.exists(folder_structure_file):
        print(f"Folder structure file missing: {folder_structure_file}")
        create_folder_structure(memory_templates)
        create_connection_map(memories_folder)
        print_colored("Folder structure and connection map recreated!", "green")

    # Check if current folder structure file is missing
    current_folder_structure_file = os.path.join(memories_folder, "current_folder_structure.txt")
    if not os.path.exists(current_folder_structure_file):
        print(f"Current folder structure file missing: {current_folder_structure_file}")
        summarise_memory_folder_structure(memories_folder, file_path=current_folder_structure_file)
        print_colored("Current folder structure file recreated!", "green")


def create_connection_map(base_folder):
    """Creates a connection map file with similar folder names and paths."""
    folder_list = []
    for root, dirs, files in os.walk(base_folder):
        for dir_name in dirs:
            folder_path = os.path.join(root, dir_name)
            folder_list.append((dir_name, folder_path))

    similar_folders = find_similar_folders(folder_list)

    with open(os.path.join(base_folder, "Memory_connecions_map.txt"), "w") as f:
        for folder_name, paths in similar_folders.items():
            f.write(f"**** {folder_name} ****\n")  # Add separator
            for path in paths:
                f.write(f"  Path: {path}\n")
            f.write("\n")


def create_folder_structure(memory_templates):
    """Creates the folder structure based on the memory templates."""
    script_path = os.path.abspath(os.path.dirname(__file__))
    folder_list = []

    for template_name, template_data in memory_templates.items():
        print(f"Processing template: {template_name}")

        template_name_safe = template_name.replace(":", "_")
        print(f"  Safe template name: {template_name_safe}")

        base_folder = os.path.join(script_path, "memories")
        print(f"  Creating template folder: {base_folder}")
        os.makedirs(base_folder, exist_ok=True)
        folder_list.append((template_name_safe, base_folder))

        template_folder = os.path.join(base_folder, template_name_safe)
        print(f"  Creating template folder: {template_folder}")
        os.makedirs(template_folder, exist_ok=True)
        folder_list.append((template_name_safe, template_folder))

        create_folders_from_structure(template_data["structure"], template_folder, folder_list)

    # Create connection map
    create_connection_map(base_folder)








def summarise_memory_folder_structure(folder_path, file_path="directory_structure.txt", include_files=True):


    ignore_files = [".\\directory_structure.txt", ".\\Memory_connecions_map.txt"]

    with open(file_path, 'w') as f:
        f.write(f"Directory structure for: {folder_path}\n\n")
        for root, dirs, files in os.walk(folder_path):
            # Write folder path to file
            f.write(f"{root}\n")

            if include_files:
                # Write file names to file, ignoring specified files
                for file in files:
                    full_path = os.path.join(root, file)
                    if full_path not in ignore_files:
                        f.write(f"{full_path}\n")


if __name__ == "__main__":
    create_file_structure(memory_templates)


Subdirectory: tools
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\tools'


Subdirectory: Cathegory_Os
## Summary of Files and Directories in 'C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\tools\Cathegory_Os'

File: get_directory_structure.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\tools\Cathegory_Os\get_directory_structure.py)
Content (First 44 lines):

import  os
import  json

def get_directory_structure(directory):

    print("Entered get_directory_structure function with directory:", directory)
    directory_structure = {}

    for root, dirs, files in os.walk(directory):
        file_info = []
        for file in files:
            file_path = os.path.join(root, file)
            file_info.append({
                'filename': file,
                'size': os.path.getsize(file_path),
                'relative_path': os.path.relpath(file_path, directory),
                'full_path': file_path
            })
        directory_structure[os.path.relpath(root, directory)] = {
            'files': file_info,
            'folders': dirs
        }

    print("About to return the directory structure with", len(directory_structure), "folders.")
    return directory_structure

get_directory_structure_description_json = {
    'function_declarations': [
        {
            'name': 'get_directory_structure',
            'description': 'Returns a dictionary representing the directory structure with file names, sizes, relative paths, and full paths.',
            'parameters': {
                'type_': 'OBJECT',
                'properties': {
                    'directory': {'type_': 'STRING', 'description': 'The path to the directory.'}
                },
                'required': ['directory']
            }
        }
    ]
}

get_directory_structure_description_short_str="Returns a dictionary representing the directory structure with file names, sizes, relative paths, and full paths."

File: save_to_file.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\tools\Cathegory_Os\save_to_file.py)
Content (First 49 lines):
import os
import json
from termcolor import colored  # Import the termcolor library

def save_to_file(content: str = None, file_name: str = 'NoName', file_path: str = None) -> dict:

    print(colored(f"Entering: save_to_file(...)", 'blue'))
    if content is None:
        content = ""
    if file_path is None:
        full_path = os.path.join(os.getcwd(), file_name)
    else:
        full_path = os.path.join(file_path, file_name)

    try:
        with open(full_path, 'w', encoding='utf-8') as f:
            f.write(content)

        success_message = f"File saved successfully at: {full_path}"
        print(colored(success_message, 'green'))
        print(colored(f"Exiting: save_to_file(...)", 'blue'))
        return {"status": "success", "message": success_message, "file_path": full_path}

    except Exception as e:
        error_message = f"Failed to save file: {str(e)}"
        print(colored(error_message, 'red'))
        print(colored(f"Exiting: save_to_file(...)", 'blue'))
        return {"status": "failure", "message": error_message}


save_to_file_description_json = {
    'function_declarations': [
        {
            'name': 'save_to_file',
            'description': 'Saves content to a file.',
            'parameters': {
                'type_': 'OBJECT',
                'properties': {
                    'content': {'type_': 'STRING'},
                    'file_name': {'type_': 'STRING', 'description': 'The name of the file. Defaults to "NoName".'},
                    'file_path': {'type_': 'STRING', 'description': 'The path to save the file. Defaults to the current working directory if not provided.'}
                },
                'required': ['content', 'file_name']
            }
        }
    ]
}

save_to_file_description_short_str="Saves content to a file"

File: summarize_files_contents.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\tools\Cathegory_Os\summarize_files_contents.py)
Content (First 40 lines):

import  os
import  json
def summarize_files_contents(file_paths):

    print("Entered summarize_files_contents function with", len(file_paths), "file paths.")
    summaries = []
    for file_path in file_paths:
        print("Processing file:", file_path)
        summary = {}
        try:
            with open(file_path, 'r') as file:
                content = file.read()
                summary['path'] = file_path
                summary['content'] = content
        except Exception as e:
            summary['path'] = file_path
            summary['error'] = str(e)
        summaries.append(summary)

    print("About to return the summaries for", len(summaries), "files.")
    return summaries

summarize_files_contents_description_json = {
    'function_declarations': [
        {
            'name': 'summarize_files_contents',
            'description': 'Opens and summarizes the content of multiple files.',
            'parameters': {
                'type_': 'OBJECT',
                'properties': {
                    'file_paths': {'type_': 'ARRAY', 'items': {'type_': 'STRING'}, 'description': 'A list of file paths.'}
                },
                'required': ['file_paths']
            }
        }
    ]
}

summarize_files_contents_description_short_str="Opens and summarizes the content of multiple files.'"

File: Tool_Manager.py (C:\Users\DELL\Desktop\selfawareGemini\SelAwareAI_Gemini\Gemini_SELF_AWARE\PROJECTnew2\Tool_Manager.py)
Content (First 201 lines):
import os
import importlib.util
import google.generativeai as genai
from termcolor import colored, cprint  # Import termcolor for colored printing
import json
from typing import Dict, Tuple

class ToolManager:
    def __init__(self, tools_directory="tools"):
        """Initializes the tool manager by loading tools from the specified directory."""
        print(f"Initializing ToolManager with tools directory: {tools_directory}")
        self.tools_directory = tools_directory
        self.tool_mapping = {}  # Map tool names to functions
        self.all_tools = []  # List of loaded tool descriptions (JSON)
        self.short_descriptions = {}  # Dictionary for short descriptions
        self.categories = {}  # Dictionary to store category information
        self._load_tools()  # Load tools upon initialization

    def _load_tools(self):
        """Scans the tools directory, loads tools, and populates tool_mapping."""
        print(f"Scanning tools directory: {self.tools_directory}")

        for category in os.listdir(self.tools_directory):
            print(f"Found category: {category}")
            category_path = os.path.join(self.tools_directory, category)
            if os.path.isdir(category_path):
                print(f"Entering category directory: {category_path}")
                self.categories[category] = {"tools": []}  # Store the category information

                for filename in os.listdir(category_path):
                    if filename.endswith(".py") and not filename.startswith("_"):
                        print(f"Found Python file: {filename}")
                        tool_name = filename[:-3]  # Remove '.py' extension
                        self._load_tool(category, tool_name)
                        self.categories[category]["tools"].append(tool_name)

    def _load_tool(self, category, tool_name):
        """Loads a single tool from a given category."""
        print(f"Loading tool: {tool_name} from category: {category}")
        module_name = f"{category}.{tool_name}"
        module_path = os.path.join(self.tools_directory, category, f"{tool_name}.py")

        spec = importlib.util.spec_from_file_location(module_name, module_path)
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)

        # Assume tool function has the same name as the module
        tool_function = getattr(module, tool_name)

        # Get description (assuming naming convention like 'tool_name_description_json')
        description_name = f"{tool_name}_description_json"
        tool_description = getattr(module, description_name, None)

        # Get short description (assuming naming convention like 'tool_name_description_short_str')
        short_description_name = f"{tool_name}_description_short_str"
        short_description = getattr(module, short_description_name, None)

        # Check if the tool exists
        if tool_function is not None:
            print(f"Tool function '{tool_name}' loaded successfully")
            self.tool_mapping[tool_name] = tool_function
            self.all_tools.append(tool_description)
            self.short_descriptions[tool_name] = short_description
            print(f"Tool description: {tool_description}")
            print(f"Short description: {short_description}")
        else:
            print(f"Warning: Could not load tool function '{tool_name}' from '{module_path}'")

    def get_tools_list_json(self):
        """Returns a list of JSON tool descriptions."""
        return self.all_tools

    def get_tools_structure(self):
        """Returns a dictionary representing the structure of the tools folder, including categories."""
        return {
            "categories": self.categories,
            "all_tools": self.all_tools,
            "tool_mapping": self.tool_mapping,
            "short_descriptions": self.short_descriptions
        }

    def print_tools_structure(self):
        """Prints the structure of the tools folder in a colorful and organized way."""

        tools_structure = self.get_tools_structure()

        cprint("\n\n========================================", "magenta")
        cprint("  Tool Manager Structure", "cyan", attrs=["bold"])
        cprint("========================================", "magenta")

        cprint("\nCategories:", "green", attrs=["bold"])
        for category, info in tools_structure["categories"].items():
            cprint(f"  {category}:", "blue", attrs=["bold"])
            for tool_name in info["tools"]:
                cprint(f"    - {tool_name}", "cyan")

        cprint("\n\nTool Descriptions (JSON):", "green", attrs=["bold"])
        for i, tool_json in enumerate(tools_structure["all_tools"]):
            cprint(f"  {i+1}. {tool_json}", "yellow")

        cprint("\n\nTool Mapping:", "green", attrs=["bold"])
        for tool_name, tool_function in tools_structure["tool_mapping"].items():
            cprint(f"  {tool_name}: {tool_function}", "yellow")

        cprint("\n\nShort Tool Descriptions:", "green", attrs=["bold"])
        for tool_name, short_description in tools_structure["short_descriptions"].items():
            cprint(f"  {tool_name}: {short_description}", "cyan")

        cprint("\n\n========================================", "magenta")

        return tools_structure

def ChooseToolByAI(user_prompt: str, tools_structure: Dict) -> str:
    """
    Analyzes the user's prompt using AI and chooses a tool based on keywords,
    ensuring the selected tool returns JSON descriptions.
    """
    for tool_name, tool_description in tools_structure["short_descriptions"].items():
        # Check if the tool returns JSON descriptions
        tool_json = next(item for item in tools_structure["all_tools"] if item["name"] == tool_name)
        if tool_json["return_type"] == "json":
            if any(keyword in user_prompt.lower() for keyword in tool_description.lower().split()):
                return f"Call tool: {tool_name}"
    return "Call tool: none"

def extract_tool_and_arguments_from_ai_response(ai_response: str) -> Tuple[str, str]:
    """
    Extracts the tool name and arguments from the AI's response.
    """
    for line in ai_response.split("\n"):
        if line.startswith("Call tool: "):
            parts = line.split("Call tool: ")
            tool_name = parts[1].strip()
            arguments = parts[1] if len(parts) > 1 else ""
            return tool_name, arguments
    return None, None

def execute_selected_tool(tool_manager: ToolManager, tool_name: str, arguments: str = None) -> str:
    """
    Executes the selected tool and returns the result.
    """
    tool_function = tool_manager.tool_mapping.get(tool_name)
    if tool_function:
        try:
            result = tool_function(arguments)
            print(f"Tool '{tool_name}' executed successfully with result: {result}")
            return result
        except Exception as e:
            print(f"Error executing tool '{tool_name}': {e}")
    else:
        print(f"Tool '{tool_name}' not found.")
    return "Error: Tool not found or execution failed."

class AiToolSelector:
    def __init__(self, tool_manager: ToolManager):
        self.tool_manager = tool_manager
        self.model = self._initialize_model()

    def _initialize_model(self):
        """Initializes the generative AI model with the ToolSelector function."""
        tools_structure = self.tool_manager.get_tools_structure()
        tools = {
            "ToolSelector": {
                "description": "This tool analyzes user input and selects another tool from the available options, ensuring the selected tool returns JSON descriptions.",
                "function": ChooseToolByAI,
            }
        }

        model = genai.GenerativeModel(
            system_instruction="""You are a helpful AI assistant with access to a variety of tools.
            When you need to use a tool, state your request clearly in the following format:
            "Call tool: <tool_name>"

            For example, if you need to list files in a directory, you would say:
            "Call tool: list_files"

            Make sure to provide any necessary arguments or information for the tool.
            """,
            model_name='gemini-1.5-flash-latest',
            safety_settings={'HARASSMENT': 'block_none'},
            tools=tools
        )
        return model

    def select_and_run_tool_from_ai(self, user_prompt: str) -> str:
        """
        Orchestrates the process of selecting and executing a tool using AI.
        """
        ai_response = self.model.start_chat(history=[]).send_message(user_prompt).text
        print(f"AI Response: {ai_response}")
        return self.execute_tool_from_ai_response(ai_response)

    def execute_tool_from_ai_response(self, ai_response: str) -> str:
        """
        Interprets the AI's response, extracts tool information, and executes the tool.
        """
        tool_name, arguments = extract_tool_and_arguments_from_ai_response(ai_response)
        if tool_name:
            return execute_selected_tool(self.tool_manager, tool_name, arguments)
        else:
            return "Error: No tool selected."

